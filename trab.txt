//--------------- MACROS Genericas ---------------//
#define clear_bit(p,b) (p&=~(0b1<<b))
#define seta_bit(p,b) (p|=0b1<<b)
#define inverte_bit(p,b) (p^=0b1<<b)
#define bit(p,b) ((p>>b)&0b1)
//---------------- MACROS PORTAS ----------------//
#define entrada_AI_B(b) clear_bit(DDRB,b); clear_bit(PORTB,b)
#define entrada_PU_B(b) clear_bit(DDRB,b); seta_bit(PORTB,b)
#define saida_B(b) seta_bit(DDRB,b)
#define inverte_B(b) inverte_bit(PORTB,b)
#define eh_um_B(b) bit(PINB,b)
#define eh_zero_B(b) !bit(PINB,b)
//---------------- MACROS TIMERS ----------------//
#define OVF 0                                    // bit habilitacao de interrupcao por OVF de TIMSK1
#define T1A 1                                    // bit habilitacao de interrupcao por T1A de TIMSK1
#define T1B 2                                    // bit habilitacao de interrupcao por T1B de TIMSK1
#define T1_clear TCCR1A = TCCR1B = 0;            // limpa registradores do T1
#define T1_prescaller_8 seta_bit(TCCR1B,CS11)    // prescaller 8 (CS11)

#define T1_prescaller_64 seta_bit(TCCR1B,CS10);seta_bit(TCCR1B,CS11); // prescaller 64 (CS10,CS11)
#define T1_prescaller_256 seta_bit(TCCR1B,CS12)  // prescaller 256 (CS12)
#define T1_prescaller_1024 seta_bit(TCCR1B,CS10);seta_bit(TCCR1B,CS12); // prescaller 64 (CS10,CS11)
#define T1_CTC_OCR1A seta_bit(TCCR1B,WGM12);      // CTC - overflow em OCR1A
#define T2_CTC_OCR2A seta_bit(TCCR2A,WGM21);      // CTC - overflow em OCR2A
#define T1_int(x) seta_bit(TIMSK1,x);            // habilita interrupção (OVF/T1A/T1B)
#define T1_nint(x) clear_bit(TIMSK1,x);          // desabilita interrupção (OVF/T1A/T1B)
#define T1OVF_v TIMER1_OVF_vect                  // bit habilitar interr OVF em TIMSK1
#define T1A_v TIMER1_COMPA_vect                  // bit habilitar interr T1A em TIMSK1
#define T1B_v TIMER1_COMPB_vect                  // bit habilitar interr T1B em TIMSK1
//////////////////////
#define 0VF 0                                    // bit habilitacao de interrupcao por OVF de TIMSK1 em overflow
#define T2A 1                                    // bit habilitacao de interrupcao por T1A de TIMSK1 no R (OCFA)
#define T2B 2                                    // bit habilitacao de interrupcao por T1B de TIMSK1 no R (OCFB)
#define T2_prescaller_8 seta_bit(TCCR2B,CA21)    // prescaller 8 (CA21)
#define T2_int(x) seta_bit(TIMSK2,x);            // habilita interrupção (OVF/T2A/T2B)
#define T2A_v TIMER2_COMPA_vect                  // bit habilitar interr T2A em TIMSK2
#define T2B_v TIMER2_COMPB_vect                  // bit habilitar interr T2B em TIMSK2

void setup(){
 saida_B(2);
 T2_prescaller_8;
 T2_int(T2B);
 T2_int(T1B);
 OCFA=5
 

}

void loop(){

}

ISR(T2A_v){              // interrupçao OCR1A match (OVF)
  seta_bit(PORTB,2);     // coloca PB5 em 5V
}

ISR(T2B_v){              // interrupçao OCR1B match
  clear_bit(PORTB,2);    // coloca PB5 em 0V
}
